Problem:

1.	Read a CSV file (as part of the class path) at application startup, store each record(Employee record) 
in an in-memory cache solution (choose any caching solution that u are comfortable with). 
Each CSV record is an employee record, with below columns:

EmployeeID | EmployeeName | Title | BusinessUnit | Place | SupervisorID | Competencies | Salary
 
2.	Create a /employee/place/{place}/salary/{percentage} PUT endpoint that will update the in-memory 
cache by increasing their salary by percentage(percentage path param) for employees that have place 
matching with place path param.(Use java 8 for transformation)
 
3.	The end point will return the refreshed list of employee record

4.	Create a GET endpoint to return the nested list of all supervisees of a given supervisor 
e.g. consider D, C report into B, B report into A, if I query for A, I should get A->B->C,D

5.	Create an endpoint to return the total salary of 
	a.	given BU
	b.	given supervisor
	c.	given place

6.	Create an endpoint to return the list of employees for a given place

7.	Create an endpoint to return the range of salaries for a given title

8.	Persist cache on shutdown so that last state is available on restart 
 
9.	The code must be modular/follow design principles(solid)
 
10.	It must have Swagger and Unit tests.

Solution:

	H2 URL : http://localhost:8080/h2-console/
	H2 Connection String : jdbc:h2:mem:sapient;DB_CLOSE_ON_EXIT=FALSE

Point 1: 

	Used @PostConstruct to read data from csv and store in H2.

Point 2,3,4,5,6,7:

	Api for Point 2 and 3 : (put) http://localhost:8080/employee/{place}/Delhi/salary/{percentage}

	Api for Point 4 : (get) http://localhost:8080/employee/getsubordiates/{supervisorid}

	Api for Point 5 : (get) http://localhost:8080/employee/{param}/{value}

	Api for Point 6 : (get) http://localhost:8080/employee/{place}
	
	Api for Point 7 : (get) http://localhost:8080/employee/range/{title}
	
Point 8:
	(post) http://localhost:8080/actuator/shutdown Used @PreDestroy to persist the data in h2 to csv
	
Point 9: 
	Follows SOLID principles
	
Point 10:
	Swagger UI: http://localhost:8080/swagger-ui.html#/employee-controller
	API tests in : test/java/com/codingtest/controller/employee/EmployeeControllerTest.java
	

